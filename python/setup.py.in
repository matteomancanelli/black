#!/usr/bin/env python

import re
from setuptools import setup, Extension

def cmake_paths(path):
  build = re.compile('^\$<BUILD_INTERFACE:(.*)>$')
  plain = re.compile('(^([^\$])(.*))$')
  paths = path.split(';')
  result = []
  for p in paths:
    match = build.match(p)
    if match:
      result.append(match.group(1))
    match = plain.match(p)
    if match:
      result.append(match.group(1))
  return result



setup(name='black_sat',
  version='${CMAKE_PROJECT_VERSION}',
  description='BLACK Python API',
  author='Nicola Gigante',
  author_email='nicola.gigante@unibz.it',
  url='https://www.black-sat.org',
  license = 'MIT',
  license_files = ('LICENSE.txt',),
  py_modules=[],
#   data_files=[('', ['mpir.dll', 'mathsat.dll'])] if sys.platform == "win32" else [],
  ext_modules=[
    Extension('black_sat', 
      ['${CMAKE_SOURCE_DIR}/python/src/bindings.cpp', 
       '${CMAKE_SOURCE_DIR}/python/src/hierarchy.cpp'],
      include_dirs=
        cmake_paths('${pybind11_INCLUDE_DIRS}') +
        cmake_paths('${PYBLACK_INCLUDE_DIRS}') +
        cmake_paths('${BLACK_INCLUDE_DIRS}'),
      extra_compile_args=['-std=c++20'],
      libraries=['black'],
      library_dirs=['${CMAKE_INSTALL_PREFIX}/lib', '${CMAKE_SOURCE_DIR}/build/src/lib'],
      extra_link_args=['-Wl,-rpath,${CMAKE_INSTALL_PREFIX}/lib'],
      # libraries=['tamer', 'mathsat'] if sys.platform == "win32" else ['tamer', 'mathsat', 'gmpxx', 'gmp'],
      language='c++',
    )
    ],
  classifiers=[
      'License :: OSI Approved :: MIT License',
      'Topic :: Scientific/Engineering :: Artificial Intelligence'
  ]
)
